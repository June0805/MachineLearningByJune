import numpy as np
from keras.datasets import mnist
from keras.utils import np_utils
from keras.models import Sequential
from keras.layers import Dense,Activation,Conv2D,MaxPool2D,Flatten
from keras.optimizers import Adam

(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train = x_train.reshape(-1, 1, 28, 28) / 255
x_test = x_test.reshape(-1, 1, 28, 28) / 255
y_train = np_utils.to_categorical(y_train, num_classes=10)
y_test = np_utils.to_categorical(y_test, num_classes=10)

model = Sequential()

model.add(Conv2D(
    #batch_input_shape(None, 1, 28, 28),
    filters=32,
    kernel_size=5,
    strides=1,
    padding='same',
    data_format='channels_first',
)
)

model.add(Activation('relu'))

model.add(MaxPool2D(
    pool_size=2,
    strides=2,
    padding='same',
    data_format='channels_first',
    
))

model.add(Conv2D(64, 5, strides=1, padding='same', data_format='channels_first'))
model.add(Activation('relu'))
model.add(MaxPool2D(2, 2, 'same', data_format='channels_first'))

model.add(Flatten())
model.add(Dense(1024))
model.add(Activation('relu'))
model.add(Dense(10))
model.add(Activation('softmax'))

adam = Adam(lr=1e-4)

model.compile(optimizer=adam, loss='categorical_crossentropy', metrics=['accuracy'])

print('Training - - - - - - - - ')
model.fit(x_train, y_train, epochs=1, batch_size=64)

print('\nTesting - - - - - - - - - ')
loss, accuracy = model.evaluate(x_test, y_test)
print('\ntestloss:', loss)
print('\ntestaccuracy:', accuracy)
